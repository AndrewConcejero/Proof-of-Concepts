<?xml version="1.0" ?><cherrytree><node custom_icon_id="0" foreground="" is_bold="True" name="BP-6002-001-2019" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1561511765.91" ts_lastsave="1564055436.38" unique_id="1"><rich_text scale="h3" weight="heavy">Title: </rich_text><rich_text>Set up and use of</rich_text><rich_text weight="heavy"> </rich_text><rich_text>WinRM with a local host and a virtual machine client 
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">Description:</rich_text><rich_text> By enabling remoting on both devices, a remote host can use the powershell configured to the client host which can perform anything you can perform in a powershell. 
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">ATT&amp;CK Tactic and Technique: </rich_text><rich_text link="webs https://attack.mitre.org/techniques/T1028/">https://attack.mitre.org/techniques/T1028/</rich_text><rich_text> 
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">Use Case ID(s) and Description(s):</rich_text><rich_text scale="h3"> </rich_text><rich_text>None 
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">Tool Name and Version: </rich_text><rich_text>WinRM
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">Prerequisites: </rich_text><rich_text>
            Client (Windows Virtual Machine)
                        1. The client’s username and password for the said user is known
                        2. Network Configuration of Virtual Machine is set to “Host-only Adapter”
                                    VirtualBox Manager-&gt;Settings-&gt;Network-&gt;Attached to-&gt;“Host-only Adapter”
                        3. Enable Firewall exceptions
                                    You can either go to Windows Defender Firewall -&gt; Advanced Setting-&gt; Inbound rules-&gt; Windows Remote Management (HTTP-In)-&gt;Right click -&gt;Enable Rule
                                    
                                    Or
 
                             Enter “</rich_text><rich_text foreground="#ff0000">set-netfirewallrule -displayname 'windows remote management (http-in)' -enabled true -passthru | select -property displayname,profile,enabled</rich_text><rich_text>” in the powershell
                        
                     4. Make sure that both networks are in Private. To verify, go to settings then select network &amp; internet then you can see there if it is private or public or no network connected or put “-skipnetworkprofilecheck” at the end of step 1.
                     6. Advance audit policies and </rich_text><rich_text link="node 24">Sysmon</rich_text><rich_text> are enabled

</rich_text><rich_text scale="h3" weight="heavy">References: </rich_text><rich_text>

</rich_text><rich_text link="webs https://www.howtogeek.com/117192/how-to-run-powershell-commands-on-remote-computers/">https://www.howtogeek.com/117192/how-to-run-powershell-commands-on-remote-computers/</rich_text><rich_text>
 
</rich_text><rich_text link="webs https://4sysops.com/wiki/disable-powershell-remoting-disable-psremoting-winrm-listener-firewall-and-localaccounttokenfilterpolicy/">https://4sysops.com/wiki/disable-powershell-remoting-disable-psremoting-winrm-listener-firewall-and-localaccounttokenfilterpolicy/</rich_text><rich_text>


</rich_text><rich_text scale="h3" weight="heavy">Steps to Reproduce and Verify:</rich_text><rich_text scale="h3"> </rich_text><rich_text>

</rich_text><rich_text scale="h3">   1) Open Windows PowerShell on both machines, the client and the remote, run as administrator.</rich_text><rich_text>
 
</rich_text><rich_text scale="h3">   2) Enter “</rich_text><rich_text foreground="#ff0000" scale="h3">Enable-PSRemoting -Force</rich_text><rich_text scale="h3">” on both powershells</rich_text><rich_text>
 
    Powershell:
    </rich_text><rich_text foreground="#1e1e9090ffff">WinRM has been updated to receive requests.
    WinRM service type changed successfully. 
    WinRM service started.</rich_text><rich_text>
 
    To verify if its enabled or not, enter “</rich_text><rich_text foreground="#ff0000">get-pssessionconfiguration | format-table -property name,permission</rich_text><rich_text>” in the powershell.
 
    Powershell: 
    </rich_text><rich_text foreground="#1e1e9090ffff">Name                          Permission
    ----                          ----------
    microsoft.powershell          NT AUTHORITY\INTERACTIVE AccessAllowed, BUILTIN\Administrators AccessAllowed,...
    microsoft.powershell.workflow BUILTIN\Administrators AccessAllowed, BUILTIN\Remote Management Users AccessA...
    microsoft.powershell32        NT AUTHORITY\INTERACTIVE AccessAllowed, BUILTIN\Administrators AccessAllowed,...</rich_text><rich_text>

        6 logs are produced (3 in system logs and 3 in sysmon logs) by enabling psremoting
        
        System: 
            1. </rich_text><rich_text link="node 12">Event 10148</rich_text><rich_text>
            2. </rich_text><rich_text link="node 13">Event 10121</rich_text><rich_text>
            3. </rich_text><rich_text link="node 14">Event 7040</rich_text><rich_text>
        Sysmon
            1. </rich_text><rich_text link="node 28">Event 3, Process ID 4</rich_text><rich_text>
            2. </rich_text><rich_text link="node 29">Event 3, Process ID 4040</rich_text><rich_text>
            3. </rich_text><rich_text link="node 30">Event 1</rich_text><rich_text>
</rich_text><rich_text scale="h3">    
    3) Set listeners for the client by entering </rich_text><rich_text>
 
    “</rich_text><rich_text foreground="#ff0000">Set-Item wsman:\localhost\client\trustedhosts </rich_text><rich_text>&lt;IP of other pc&gt;” in the powershell
 
    Powershell: 
    </rich_text><rich_text foreground="#1e1e9090ffff">WinRM Security Configuration.
    This command modifies the TrustedHosts list for the WinRM client. The computers in the TrustedHosts list might not be authenticated. The
    client might send credential information to these computers. Are you sure that you want to modify this list?
    [Y] Yes  [N] No  [S] Suspend  [?] Help (default is &quot;Y&quot;): Y</rich_text><rich_text>
 
    No new logs were produced in system, security nor sysmon. 

   4) </rich_text><rich_text scale="h3">Restart WinRM service by entering “</rich_text><rich_text foreground="#ff0000" scale="h3">Restart-Service WinRM</rich_text><rich_text scale="h3">” on both powershells.</rich_text><rich_text>
 
    3 new logs were produced
        System:
        1. </rich_text><rich_text link="node 15">Event 10149</rich_text><rich_text>
        2. </rich_text><rich_text link="node 17">Event 10148</rich_text><rich_text> 
        3. </rich_text><rich_text link="node 18">Event 10121</rich_text><rich_text>
        
        Security
        1. </rich_text><rich_text link="node 31">Event 4688</rich_text><rich_text>
        
        Sysmon
        1. </rich_text><rich_text link="node 27">Event 1, Process ID 5288</rich_text><rich_text>
        2. </rich_text><rich_text link="node 32">Event 5, Process ID 4628</rich_text><rich_text>

</rich_text><rich_text scale="h3">   5) Test if connection and if there’s a listener.</rich_text><rich_text>
 
    To know if remote is operational, on the remote pc’s powershell, enter “</rich_text><rich_text foreground="#ff0000">test-wsman </rich_text><rich_text>&lt;ip of client&gt;”
 
    Powershell:
    </rich_text><rich_text foreground="#1e1e9090ffff">wsmid           : </rich_text><rich_text foreground="#1e1e9090ffff" link="webs http://schemas.dmtf.org/wbem/wsman/identity/1/wsmanidentity.xsd">http://schemas.dmtf.org/wbem/wsman/identity/1/wsmanidentity.xsd</rich_text><rich_text foreground="#1e1e9090ffff">
    ProtocolVersion : </rich_text><rich_text foreground="#1e1e9090ffff" link="webs http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd">http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd</rich_text><rich_text foreground="#1e1e9090ffff">
    ProductVendor   : Microsoft Corporation
    ProductVersion  : OS: 0.0.0 SP: 0.0 Stack: 3.0</rich_text><rich_text>
    
    2 logs were produced 
    
    Sysmon
    1. </rich_text><rich_text link="node 33">Event 3, Process ID 4040</rich_text><rich_text>
    2. </rich_text><rich_text link="node 35">Event 3, Process ID 3700</rich_text><rich_text>
    
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
    To know if a listener is active on either pc, enter “dir wsman:\localhost\listener” on either powershells.
 
    Powershell:
    </rich_text><rich_text foreground="#1e1e9090ffff">WSManConfig: Microsoft.WSMan.Management\WSMan::localhost\Listener

    Type            Keys                                Name
    ----            ----                                ----
    Container       {Transport=HTTP, Address=*}         Listener_1084132640</rich_text><rich_text foreground="#1e1e9090ffff" weight="heavy"> </rich_text><rich_text>
 
</rich_text><rich_text scale="h3">   6) Create a session </rich_text><rich_text>
 
    To activate the remoting system, on the remote pc’s powershell, enter “</rich_text><rich_text foreground="#ff0000">Enter-PSSession &lt;</rich_text><rich_text foreground="#ff0000" style="italic">Computer</rich_text><rich_text foreground="#ff0000">&gt; -credential &lt;</rich_text><rich_text foreground="#ff0000" style="italic">User</rich_text><rich_text foreground="#ff0000">&gt;</rich_text><rich_text>” and enter the corresponding password to the entered user.
    
    3  logs were produced.

    Sysmon
    1. </rich_text><rich_text link="node 34">Event 3, SourcePort 51815</rich_text><rich_text>
    2. </rich_text><rich_text link="node 37">Event 3, SourcePort 51816</rich_text><rich_text>
    3. </rich_text><rich_text link="node 38">Event 3, SourcePort 51817</rich_text><rich_text>
</rich_text></node></cherrytree>